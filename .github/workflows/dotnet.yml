# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET MAUI workflow for MyLiveNetMauiApp

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
#  CI_CD_Android:

#    runs-on: windows-latest

#    steps:
#    - uses: actions/checkout@v3
#    - name: Setup Keystore File
#      run: |
#        echo "${{ secrets.KEYSTORE_FILE }}" > mylivenetmauiapp.keystore.asc
#        gpg -d --passphrase "${{ secrets.KEYSTORE_PASSWORD_GPG }}" --batch mylivenetmauiapp.keystore.asc > mylivenetmauiapp.keystore
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v3
#      with:
#        dotnet-version: 7.0.x
#    - name: Install .NET MAUI
#      run: dotnet workload install maui
#    - name: Restore dependencies
#      run: dotnet restore
#    - name: Build
#      run: dotnet build MyLiveNetMauiApp/MyLiveNetMauiApp.csproj -c Release -f net7.0-android /p:AndroidSigningKeyStore=mylivenetmauiapp.keystore /p:AndroidSigningKeyAlias=mylivenetmauikey /p:AndroidSigningKeyPass="{{ secrets.KEYSTORE_PASSWORD }}" /p:AndroidSigningStorePass="{{ secrets.KEYSTORE_PASSWORD_ALIAS }}" --no-restore    
#    - name: Upload a Build Artifact
#      uses: actions/upload-artifact@v3.1.2
#      with:
#        name: MyLiveNetMauiArtifact
#        path: |
#          ./**/*.aab
#          ./**/*.apk
#    - name: Setup App Center CLI
#      run: npm install -g appcenter-cli
#    - name: Upload Android app to App Center
#      run: | 
#        appcenter distribute release --file ./MyLiveNetMauiApp/bin/Release/net7.0-android/com.companyname.mylivenetmauiapp-Signed.apk --app icebeam/My-Live-Net-Maui-App --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}

  CI_CD_iOS:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATES_P12 }}
        P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles    
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install .NET MAUI
      run: dotnet workload install maui
    - name: Restore dependencies
      run: dotnet restore
    - name: Build and Publish
      run: dotnet publish -f:net7.0-ios -c:Release /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: MyLiveNetMauiArtifact
        path: |
          ./**/*.ipa
          
    - name: Setup App Center CLI
      run: npm install -g appcenter-cli
    - name: Upload iOS app to App Center
      run: | 
        appcenter distribute release --file ./MyLiveNetMauiApp/bin/Release/net7.0-ios/ios-arm64/publish/MyLiveNetMauiApp.ipa --app icebeam/My-Live-Net-Maui-App-1 --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}

